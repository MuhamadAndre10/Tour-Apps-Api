const fs = require('fs');

// const tours = JSON.parse(
//   fs.readFileSync(`${__dirname}/../dev-data/data/tours-simple.json`)
// );

// const chekId = (req, res, next, val) => {
//   console.info(`tour ID is ${val}`);
//   if (req.params.id * 1 > tours.length) {
//     return res.status(404).json({
//       status: 'Fail',
//       message: 'Invalid id',
//     });
//   }
//   next();
// };

const checkBody = (req, res, next) => {
  console.info(req.body.name);
  if (!req.body.name || !req.body.price) {
    return res.status(400).json({
      status: 'Bad Request',
      message: 'Invalid Request',
    });
  }
  next();
};

//* ROUTE HANDLER
const getAllTours = (req, res) => {
  res.status(200).json({
    status: 'success',
    requestTime: req.requestTime,
    result: tours.length,
    data: {
      tours,
    },
  });
};

const getTour = (req, res) => {
  const id = req.params.id * 1;
  //todo: fungsi di atas untuk mengubah angka string ke int,
  const tour = tours.find((el) => el.id === id);

  //! cek error, jika param melebihi jumlah length tours (dg sederhana)
  // if (!tour) {
  //   return res.status(404).json({
  //     status: 'Fail',
  //     message: 'Invalid Id',
  //   });
  // }

  res.status(200).json({
    status: 'success',
    data: {
      tour,
    },
  });
};

const createTour = (req, res) => {
  // console.log(req.body);

  const newId = tours[tours.length - 1].id + 1;
  const newTour = Object.assign({ id: newId }, req.body);

  tours.push(newTour);

  fs.writeFile(
    `${__dirname}/dev-data/data/tours-simple.json`,
    JSON.stringify(tours),
    err => {
      res.status(201).json({
        status: 'success',
        data: {
          tour: newTour
        }
      });
    }
  );
};

const updateTour = (req, res) => {
  // if (req.params.id * 1 > tours.length) {
  //   return res.status(404).json({
  //     status: 'Fail',
  //     message: 'Invalid id',
  //   });
  // }

  res.status(200).json({
    status: 'success',
    data: {
      tour: 'Update tour here ...',
    },
  });
};
const deleteTour = (req, res) => {
  // todo: 204 = delete success
  res.status(204).json({
    status: 'success',
    data: null,
  });
};

module.exports = {
  getAllTours,
  getTour,
  createTour,
  updateTour,
  deleteTour,
  checkBody,
};
